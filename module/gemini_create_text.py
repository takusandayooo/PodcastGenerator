from google import genai
from google.genai import types
import pathlib
from dotenv import load_dotenv
import os

load_dotenv()
def create_text(path):
    # Google API クライアントの初期化
    client = genai.Client(api_key=os.getenv("GOOGLE_API_KEY"))

    # ローカルのPDFファイルパスを指定
    local_pdf_path = pathlib.Path(path)  # ローカルのPDFファイルのパスを指定

    # PDFファイルが存在するか確認
    if not local_pdf_path.exists():
        raise FileNotFoundError(f"File not found: {local_pdf_path}")

    # プロンプトを設定
    prompt = """

    🔹 出力形式

    JSON形式で出力し、各セリフは以下のように表現してください。

    {
    "speakers":["話者1", "話者2"],
    "script": [
        {
        "speaker": "話者1",
        "text": "話者1のセリフ"
        },
        {
        "speaker": "話者2",
        "text": "話者2のセリフ"
        }
    ]
    }



    ⸻

    🔹 会話のスタイル
        •	ポッドキャストのような自然な対話形式 にすること。
        •	聞き手（インタビュアー）と語り手（専門家）の役割 を明確にする。
        •	軽いジョークやリアクションを含め、リスナーが飽きずに楽しめる雰囲気 にする。
        •	話し言葉を意識し、自然な流れを作る（例：「つまり」「要するに」「これって要は～ってことですよね？」など）。
        •	インタビュアーは 一般的なリスナー代表 として、分かりやすい質問をする。
        •	専門家は 専門用語をできるだけ噛み砕いて説明 する。

    ⸻

    🔹 会話の構成

    1. 導入（ポッドキャストのタイトル紹介、話者紹介）
    　- ポッドキャストのタイトルを明示し、話者を紹介。
    　- 軽い雑談を交えてリスナーを引き込む。

    2. 背景（なぜこのテーマが重要か）
    　- 今回のテーマについて触れ、なぜこの話が重要なのかを話す。
    　- インタビュアーが「これ、私たちの生活にどんな影響があるんでしょう？」と質問。

    3. 目的（研究・分析の目的）
    　- 研究や分析の狙いを説明。
    　- 「何を明らかにしたかったのか？」を掘り下げる。

    4. 手法（具体的な分析手法やアプローチ）
    　- どんな手法を使ったのかを、専門的になりすぎないように話す。
    　- 「こういう手法って、他にも応用できるんですか？」といった質問を含める。

    5. 実験方法（データ収集・実験の設計）
    　- どんなデータを集め、どう分析したのか。
    　- 「実際にやってみて大変だったことは？」といったリアルな話を盛り込む。

    6. 実験結果（興味深い発見やデータの要点）
    　- 結果の中で特に面白いポイントをピックアップ。
    　- 「つまり、これって○○ってことですよね？」と確認しながら進める。

    7. 考察（結果の解釈、今後の課題）
    　- 結果の意義や、今後の展望について語る。
    　- 「この研究が進むと、どんな未来が待ってるんですか？」と未来の可能性を探る。

    8. まとめ（リスナーへのメッセージ、次回の予告）
    　- 今回の内容を振り返り、「今日の話を一言で言うと？」と簡潔にまとめる。
    　- リスナーに向けたメッセージや、次回の内容について触れる。

    ⸻

    🔹 追加条件
        •	各セリフは最低でも2～3文以上の長さにし、詳細な説明を含める。
        •	インタビュアーの質問にはバリエーションを持たせる（「なるほど」「ちょっと気になるんですが」「これ、意外ですね！」など）。
        •	「雑談」や「ちょっとした余談」を自然に挟む（例：「僕も昔、似たようなことやったんですよ～！」など）。
        •	ジョークや比喩を適度に使い、固くなりすぎないようにする。


    """

    # PDFファイルを読み込んでリクエストを送信
    response = client.models.generate_content(
        model="gemini-1.5-flash",
        contents=[
            types.Part.from_bytes(
                data=local_pdf_path.read_bytes(),
                mime_type='application/pdf',
            ),
            prompt
        ]
    )

    # 結果を出力
    json_text=response.text.replace("```json","").replace("```","")
    return json_text

if __name__ == "__main__":
    create_text("input.pdf")